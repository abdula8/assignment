Q1 : Are the expressions *++ptr and *ptr++ the same ?
A1 : NO

Q2 : what would be the equivalent pointer expression for referring the array element a[i][j][k][l] ?
A2 : int a[i][j][k][l] ;
	int *val = &arr[0][0][0][0];
	for (int i=0; i<(j*i*k*l);*val++,i++)
	{
		*val = i;
		printf("%d\n", *val);
	}
Q3 : what would be the output of the following program?
  main(){
  int arr[]={12,13,14,15,16};
  printf( "%d %d %d",sizeof(arr),sizeof(*arr),sizeof(arr[0]) );
  }
  
A3 : 20 4 4

Q4 : where we can use the pointer ?
A4 : 
1- Pointers enable complex â€œlinked" data structures like linked lists and binary trees.
2- To pass large structures so that complete copy of the structure can be avoided.
3- Pointers allow different functions to share and modify their local variables.

Q5 : 
A5 : 
  
